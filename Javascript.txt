 Logical: &&, ||, !
Ternary operator/conditional: condition ? expr1:expr2
 <input type="reset" value="clear">
increment/decrement: ++, --
eqatity: ===
assignment:  =
typeof
instanceof
delete
concatenation:  +
----------------------------------------
Operator Associtivity & precedence



/<input type="button" value="=" onClick="document.calculator.ans.value=eval(document.calculator.ans.value)">
--------------------------------------
Javascript Input and Output:-

	Input:- to take input from user we can use following methods.
	1- using window.prompt
	2- using HTML DOM-
		document.getElementById
		document.getElementsByName
		document.getElementsByClassName
		document.getElementsByTagName
		document.querySelector
		document.querySelectorAll
------------------------------------------------
Javascript Output:-
	to print /show the output we have following methods.
	1- console.log,warn,info,error
	2- document.write or writeln- not remmonded
	3- HTML DOM-
		value, innerHTML,  innerText, 		textContent
	4- alert()
----------------------------------------------------
	Control flow statement:-
		
		1- conditional statement:-
				if else
				elseif/ladder if
				nestedif
		2- switch case
			switch
			case
			break
			default
		3- Loop-
			while
			for
			do while
			for in && for of
--------------------------------------------------
w.a.p. to enter age of person and check he will eligible for vote or not, where he eligible only if his age >=18
------------------------------------------------------
1- w.a.p. to enter 3 number and print smallest 
2- w.a.p. to enter 3 number and print second largest.
3- w.a.p. to enter amount of goods and calculate discount. where if amount >=5000 then discount will be 30%, if amount>=3000 then discount will be 20%, if amount >=2000 then discount will be 15%, and if amount<2000 then print shop more to discount .
also calculate payable amount.
4- w.a.p. to enter marks of five subject and print following- total marks, percentage, grade ?
5- write the script to toggle login and signup form.
---------------------------------------------------

switch case:- switch case is very similar to if else, but here we can't pass condition, we can passonly match case, performance wise switch case is better than if else.


switch(var){

case 1:
statement;
break;

case 2:
statement;
break;

case n:
statement;
break;

default:
statement;
break;

}
--------------------------
w.a.p. to enter any number and check the number is even or odd , without using if else.
------------------------------------
Loop:- loop is the mechanism to iterate statements , n number of time. and loop reduce code complexity with iteration. there are following type of loop supported by javascript.



while:- 
initialization
target/ condition
iteration/ inc/dec
-----------------------
init;
while(condition)
{
statements;
inc/dec;
}
-------------------------------
w.a.p. to enter any number and print table of it.
-----------------------------------------------

1- w.a.p. to enter any number and print factorial of it ?

2- w.a.p. to enter term of series and print fibnucci series.

3- w.a.p. to enter any number and check the number is pelindrom or not ?

4- w.a.p. to enter any number and check the number is prime or not ?

5- w.a.p. to enter any number and check the number is armstrong of not ?
-------------------------------------------------------
for loop:- 

for(initi; condition; inc/dec)
{
statements;

}
----------------------------------------
forEach- forEach is the array iterable function, which is based on callback, it call the callback function for the each array element.

for of:- for of loop introduced in es6, it can visit on each item of array and can recieve one by one item.

for(var local_var of arrayName)
{
// use local_var
}


for in: for in designed for iterate over object. it gothrough step by step on each property of object.

for(var local_var in object_name){
//use local_var
}

---------------------------------------------------
Array:- array is the collection items , where each item located on particular index position ,  and index start from 0.
in javascript array can declare using 2 method.
1- using array literals
2- using array constructor
---------------------------------------------
how many way to add item in array ?
1- push
2- unshift
3- splice
4-using specific index 
--------------------------------------
how many way to remove item from array.
-----------------------------------------
pop
shift
splice
----------------------------------
Array methods:- 

	array mutator: push,pop,splice,unshift,sort etc.

	array non-mutator:filter,every,map,forEach, keys, values, indexOf, lastIndexOf, concat, fill, reduce etc.


-----------------------------------------------
Assignment:- 

a- 1 * * * *
   * 2 * * *
   * * 3 * *
   * * * 4 *
   * * * * 5
b-

5 4 3 2 1
5 4 3 2 
5 4 3
5 4
5

c- 

5 4 3 2 1 
4 3 2 1
3 2 1
2 1
1

d-

       1
     1 0
   1 0 1
 1 0 1 0

e-

    *
  * * *
* * * * *

f- w.a.p. to print chess board .
-----------------------------------------------

Object:- object is the key and value pair , storage, where key represent proeprty and has a value to corresponding it .  in javascript object can  create using following methods-
1- using object literals
2- using object constructor function
3- using object constructor
------------------------------------------------

1- difference between deep copy and shalow copy ?
-------------------------------------------------------------

Function:- function is the block of code , written in sequential manner to perform specific task.
javascript provide 2 type function-
a- pre-define /built-in function
b- user define function
---------------------------------------------------
a- pre-define function: these are ready made function, which use as per requirements.
	exa:
	1- string- substr,substring,toupper,tolower, startsWith,endsWith, indexOf,            lastIndexOf, charCode, charCodeAt, includes, replace,split etc.
	2- math
	3- datetime
	4- timing
----------------------------------------------------------
1- w.a.p. to enter a string and check the string pelindrom or not ?
2- w.a.p. to enter a string and find out each word occurance in the string.
3- w.a.p. to enter a string and check the specific word occurance from string.
4- w.a.p. to enter a email address and display in forllowing format
	input: rajesh12345@gmail.com
	output: raj********@gmail.com
5- w.a.p. to enter a string and print in abbrivated format
	input: raj kumar verma
	output: R.K. Verma

-------------------------------------------------------------------------

this is the india where everone is a freedom

This is The India Where Everone is a Freedom

--------------------------------------------------

Math function: these functions are usefull to perform mathmatical operations.
		all math function exist in Math static object.
	exa:
		abs, pow,ceil,floor,round,sqrt, random etc.


Date Function:- all the date function exist in Date constructor.

Timing function: these function call after a time period or set of interval.
		exa:
		setTimeout/clearTimeout
		setInterval/clearInterval
----------------------------------------------------

User define function:-  javascript also provide way to create your own function. and call it anywhere ..
	

	syntax

		function functionName(args)
		{
		//statements;
		<return value>
		}

----------------------------------------------------
type of function declaration-

1- simple function
2- expression function
3- Immediate invoke function expression (IIFE)
4- function constructor
5- recursive function/function recursion
6- function clouser
7- pure and impure function
8- function with arguments keyword
----------------------------------------------


closer function:- a clouser function is the inner function , which access its outer function/parent function variables. clouser makes laxical scope for data member.
where it prevent from outside script hacking.
	
	syntax:
		var fun=(function(){

			//do stuff
			
			function innerfunction(){

			//do stuff
			return something
			}

		return innerfunction;
		})()

-------------------------------------------------------

callback function:- a callback is the function, which pass as arugment in any function, callback can be use to handle the result in asnyc environment.
		
		setInterval(function, time)
		array.forEach(function)
------------------------------------------------------------------------------
1- w.a. function which accept arguments and produce same result.
	example;
		console.log(sum(2,3))      =>5
		console.log(sum(2)(3))     =>5
		console.log(sum(2)(3)(4))  =>9

2- exaplin difference between call, bind,apply with example.

3- what is clouser function , why we need it? exaplain with example ?

4- how many way to copy array, explain each with example ?

5- what is difference between filter,map,reduce and forEach explain each with example !

---------------------------------------------------------------------------------

Mini project- create a trafic light with 3 circle red,green,yellow, change the single after every 5 second ? where yellow must be only for 3 sec ?
--------------------------------------------------------------------------------------------------

DOM- Document Object Model:-

DOM- API-
	document.getElementById()
		.getElementsByName()
		.getElementsByClassName()
		.getElementsByTagName()
		.querySelector()
		.querySelectorAll()

-------------------------------------------------------------------------
innerHTML
innerText
value
textContent
------------------------------------------------------------------------
Attribute methods:-
		getAttribute
		setAttribute
		removeAttribute
-----------------------------------------------------------------------
Dynamic html:-
document.createElement()
document.createTextNode()
append
appendChild
prepend
remove
removeChild
-----------------------------------------------------------------------
DOM Walk:- 

parentElement
NextElementSibling
PreviousElementSibling
Children
-----------------------------------------------------------------------
DOM CSS:-
	style: -apply inline css
	className: - add/get class
	classList:- is the collection, return all classes into array and can take action on that.
	setAttribute/RemoveAttribute:- also can be use to add/remove classes
-------------------------------------------------------------------------
Event and EventListener:-
 			
Event type-
	form event
	keyboard event
	mouse event
	ajax event
	media event
	dragable event
	window event
	document event


-----------------------------------------------------------------------

write a script block following action  on my web page-
	a- copy and paste
	b- backspace/delete
	c- right click
------------------------------------------------------------------------
Event bubling & Propogation:-
-----------------------------------------------------------------------
window-
	document
	location
	console
	navigator
	geolocation
	localStorage
	sessionStorage
--------------------------------------------------------------
http://127.0.0.1:5501/1-sep/index.html
----------------------------------------------------------------------------


ECMA-6:- 
1- let & const
2- arrow function-
3- rest & spread operator
4- template literals
5- OOPs- class, consturctor,property, methods, inheirtance, abstraction etc.
6- promises
7- async and await
8- fetch API
9- collections
10- modules
---------------------------------------------------------------------------

difference between var and let ?
Ans-
1- var allow variable re-creation , where let do not allow.
2- var allow variable hoisting, while let do not allow.
3- var creates in global scope , while let create in scope level
---------------------------------------------------------------------------------------------------
difference between let and const:-
1- let  allow variable re-initialization, while const do not allow.
2- let allow to initialize value later on, while const restricted to initialize value at the time of declaration.
3- let can create with variable convention rule, but const mostly create in capital letters.
---------------------------------------------------------------------------------------------------------------------------------------

arrow function: arrow function represented by lambda sign, this function can create lambda function, while in single line, it mostly used as callback function. arrow function is more fast & optimized.

rest parameter:-  rest parameter can be use recieve remaining parameters from function.
		it create a array to hold all params. it respresent by (...) 3 dot.

----------------------------------------------------------------------------------------------
Object Oriented Programming: - (OOPs):-

OOPs is the programming methodology, by which we can solve any large and complex problem by dividing into smaller units, using divide and conqure algorithms.  OOPs mainly provide programming paradigam, where there is 4 main piller of OOPs , called PIEA.
(Polymarphism, Inheritance, Encapsulation, Abstraction).

Advantage of using OOPs-
1- code re-usability
2- easier to debug
3- code maintainbility.
4- artitectural application development
5- code security
--------------------------------------------------------------------
Feature OOPs-
	class
	object
	inheritance
	polymarphism
	encapsulation
	abstraction
	interface
----------------------------------------------------------------------
class:- class is the blue-print or collection of objects, which wrap the data member and member function into single unit.
	class usefull to create collection of similar type of members.
	like- products, customer,user, venders,admin etc.
	in plain javascript there is no special method to create class, here we can create class class by using constructor function, but in es6 introduced class keyword to create class.
----------------------------------------------
class className{

//data member & member function here

}
-------------------------------------------------------------------------------
member of class:- 

constructor:-  constructor is the special method of class, which automatically invoke , when the instance created. in es6  constructor can created by using constructor keyword.
	exa:
	class className
	{
	          constructor(){
		some code here//
		}
	}

---------------------------------------------------------------------

Note: constructor can be use to initialize comman property of class. also can be use to load base level configuration & classes.
-------------------------------------------------------------------

property:- property are usefull to read and write the data. like- name,email,mobile,gender etc.
	es6  delcare all public proeprties in constructor using this keyword.

methods:- method can be use to perform specific functionality within class. like- create,update,delete etc.
---------------------------------------------------------------------
 inheritance:- inheritance is the technique to access base class members into children class, it achieves code  re-usability.  where base class also can be called parent/super class and drived class also can be called child/sub class.
es6 provide extends keyword to achieve inheritance .
--------------------------------------------------------------------
polymarphism:- 
encapsulation:- 
abstraction: - not supported
interface:- not supported
---------------------------------------------------------------------------------------
modules:-
promises:- 
async & await:-
------------------------------------------------------------------------------------
Typescript:-  typescript is the superset language of javascript , which is a transpiler based, it transpile typescript code into javascript code.
also it is typesafe language, where each data has own type.

why use typescript:-
1- typescript provide compile time error checking
2- typescript is typesafe
3- typescript has more features than javascript, like- generic,OOPs. etc.
-------------------------------------------------------------------------------------------------------------------
datatype:-
	number,string,boolean, enum, class, any.
	

union: it combine 2 or more datatype. represented by | sign
----------------------------------------------------------------------------------------
class:-
	constructor
	property
	methods
inhehritance:- extends
encapsulation: access modifier: public,private,protected.
abstraction:-
interface:-
--------------------------------------------------------------------------------------------

npm cache clear --force
















	



















	












































































































































































	








































  
























































































		
		
		
		

		





